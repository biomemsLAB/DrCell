%% This script shows how to use the DrCell functions to analyze recordings from MEAs 
% such as (filtering, spike detection, spike features calculation)
% Author: Manuel Ciba, 2021

%% Generate an example file with two electrodes containing noise and some spikes
SaRa = 10000; % sample rate of 10 kHz
rec_dur = 10; % 10 second recording
nr_channel = 2; % two electrodes
RAW.nr_channel = nr_channel;
RAW.SaRa = SaRa;
RAW.rec_dur = rec_dur;
RAW.T = 0:1/SaRa:RAW.rec_dur;
RAW.M = rand(length(RAW.T),nr_channel)*8; % M contains the measured voltage in micro volt. Here noise is generated
RAW.EL_NUMS = [1:nr_channel]; % define number of each electrode
for i=1:length(RAW.EL_NUMS)
   RAW.EL_NAMES(i) = num2str(RAW.EL_NUMS(i)); % define name of each electrode
end
RAW.Date = '';
RAW.Time = '';
RAW.fileinfo = '';
RAW.M(10,1)  = - 300; % add spike 
RAW.M(20,1)  = - 200; % add spike 
RAW.M(25,1)  = - 100; % add spike 
RAW.M(200,1)  = - 300; % add spike 
RAW.M(250,1)  = - 200; % add spike 
RAW.M(290,1)  = - 100; % add spike 
RAW.M(2000,1)  = - 100; % add spike 


%% 1) Filtering (remove low frequencies below 50 Hz - relevant for real recordings)
f_edge = 50;
HDrawdata = 0;
flag_waitbar = 0;
[RAW, SPIKEZ.FILTER.Name, SPIKEZ.FILTER.f_edge]=ApplyFilter(RAW,f_edge,HDrawdata,flag_waitbar);



%% 2) Treshold calculation (define thresholds which are used by the spike detection)
SPIKEZ=initSPIKEZ(SPIKEZ,RAW);
SPIKEZ.pos.flag = 0; % detect no positive spikes
SPIKEZ.neg.flag = 1; % detect negative spikes
Multiplier_neg = 5; % negative threshold is defined by RMS of the noise multiplied with 5 and the factor * (-1)
Multiplier_pos = 0;
Std_noisewindow=5; % if the standard deviation of a window is less then 5, it is assumed that no spike is within the window
Size_noisewindow=0.05; % 50 ms is the window size which is used to detect a spike free window
[~,~,~,SPIKEZ,COL_RMS,COL_SDT]=calculateThreshold(RAW,SPIKEZ,Multiplier_neg,Multiplier_pos,Std_noisewindow,Size_noisewindow,HDrawdata,flag_waitbar);


%% 3) Spikedetection
SPIKEZ.PREF.flag_isHDMEAmode = false; % no HDMEA mode (HDMEA refer to MEAs with 4096 electrodes)
SPIKEZ.PREF.idleTime = 0.001; % refractory time is set to 1 ms
SPIKEZ=spikedetection(RAW,SPIKEZ);
[SPIKEZ]=applyRefractoryAndGetAmplitudes(RAW,SPIKEZ);
SPIKEZ=SpikeFeaturesCalculation(SPIKEZ);
SPIKEZ=calc_snr(RAW,SPIKEZ);


% Spikes time stamps are stored in the field "TS"
SPIKEZ.TS
% Amplitudes are stored in the field "AMP":
SPIKEZ.AMP




%% Calculate spike train features
FRmin=6; % Min firing rate is set to 6 spikes per minute. If a spike train has less spikes per minute, it will be skipped.
time_win= SPIKEZ.PREF.rec_dur/2; % here time_window is same as recording time. Smaller time windows are also possible, e.g. time_win = rec_dur/2 will split the spike train into two windows.

all_features ={ ...
'Spikerate',...
'Number of spikes',...
'Amplitude',...
'ActiveElectrodes',...
'BR_baker100',...
'BD_baker100',...
'SIB_baker100',...
'IBI_baker100',...
'BR_baker200',...
'BD_baker200',...
'SIB_baker200',...
'IBI_baker200',...
'BR_selinger',...
'BD_selinger',...
'SIB_selinger',...
'IBI_selinger',...
'NBR_chiappalone',...
'NBD_chiappalone',...
'SINB_chiappalone',...
'INBI_chiappalone',...
'NBR_jimbo',...
'NBD_jimbo',...
'SINB_jimbo',...
'INBI_jimbo',...
'NBR_MC',...
'NBD_MC',...
'SINB_MC',...
'INBI_MC',...
'Sync_CC_selinger',...
'Sync_STTC',...
'Sync_MI1',...
'Sync_MI2',...
'Sync_PS',...
'Sync_PS_M',...
'Sync_Contrast',...
'Sync_Contrast_fixed',...
'Sync_ISIDistance',...
'Sync_SpikeDistance',...
'Sync_SpikeSynchronization',...
'Sync_ASpikeSynchronization',...
'Sync_AISIDistance',...
'Sync_ASpikeDistance',...
'Sync_RISpikeDistance',...
'Sync_RIASpikeDistance',...
'Sync_EarthMoversDistance',...
'Connectivity_TSPE',...
'Connectivity_TSPE_70percent',...
'Connectivity_TSPE_withSurrogateThreshold',...
'Entropy_bin100',...
'Entropy_capurro'
    };

feature_selection = all_features([1:16, end-1, end]); % select features that will be calculated

[WIN,~]=CalcFeatures_function(SPIKEZ,feature_selection,time_win,FRmin); % calculate all selected features
FEATURES=unpackWIN2FEATURES(WIN); % unpack structure WIN to FEATURES

finalValue = FEATURES(1).mean; % here is the final value of the first feature, e.g. spike rate
featureName = FEATURES(1).YLabel;
